spring.application.name=authapp
server.port=8090
#Using Port 8090 for Authentication

spring.datasource.url=jdbc:h2:mem:AuditManagementSystem
spring.h2.console.enabled=true
spring.datasource.driver-class-name=org.h2.Driver
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
spring.h2.console.path=/h2-console


spring.jpa.show-sql=true


# Hibernate logs for displaying executed SQL, input and output	
logging.level.org.hibernate.SQL=trace
logging.level.org.hibernate.type.descriptor.sql=trace

# Log pattern
#logging.pattern.console=%d{dd-MM-yy} %d{HH:mm:ss.SSS} %-20.20thread %5p %-25.25logger{25} %25M %4L %m%n

#Secret Key
jwt.secret=sampletest

#server.servlet.context-path=/auth



set.expire.token=30
string.acess.denied=Acess Denied
string.start=Start
string.end=End
string.not.valid=Not Valid Token
string.reason.loginfail=Username or Password incorrect
string.auth.token=Authorization Token{}:
authapp.validate=/authapp/validate
authapp.login=/authapp/login
login.fail=Login failed due to incorrect password
string.hello="hello"
string.userfound=User Found
string.main.package=com.cognizant
token.expired=the token is expired and not valid anymore
auth.failed=Authentication Failed. Username or Password not valid.
token.not.found=couldn't find bearer string, will ignore the header
illegel.arg=an error occured during getting username from token

#Using this string to access in swagger
string.swagg.title=Authentication Service Documentation
string.swagg.desc=Authentication Service validates the incoming user login request and generates JWT token for further requests
string.swagg.help=Help
string.swagg.lic=Audit 1.0
conctact.name=Audit Management System
contact.web=ams.com
contact.email=ams-pod1@gmail.com
string.swagg.ver=1.0
